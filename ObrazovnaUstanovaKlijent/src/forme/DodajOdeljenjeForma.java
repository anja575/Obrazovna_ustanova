/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.Korisnik;
import domen.Mesto;
import domen.Odeljenje;
import domen.Skola;
import domen.Smer;
import domen.Ucenik;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import logika.KontrolerKlijent;
import modeli.ModelTabeleOdeljenje;
import modeli.ModelTabeleUcenici;
import sesija.Sesija;

/**
 *
 * @author HP ProBook 650 G2
 */
public class DodajOdeljenjeForma extends javax.swing.JDialog {

    /**
     * Creates new form OdeljenjeForma
     */
    public DodajOdeljenjeForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setTitle("Dodaj novo odeljenje");
        ucitajSkole();
        ucitajSmerove();
        ucitajMesta();
        tblUcenici.setModel(new ModelTabeleUcenici());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtNazivOdeljenja = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbSkola = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbSmer = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtImeUcenika = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrezimeUcenika = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtUlicaUcenika = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBrojUcenika = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnDodajUcenika = new javax.swing.JButton();
        btnObrisiUcenika = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUcenici = new javax.swing.JTable();
        btnSacuvajOdeljenje = new javax.swing.JButton();
        cmbMesto = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JFormattedTextField();
        btnZatvori = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Naziv:");

        txtNazivOdeljenja.setText("I-1");

        jLabel3.setText("Škola:");

        cmbSkola.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Smer:");

        cmbSmer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Viner Hand ITC", 3, 14)); // NOI18N
        jLabel4.setText("UCENICI");

        jLabel5.setText("Ime:");

        txtImeUcenika.setText("Petar");
        txtImeUcenika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImeUcenikaActionPerformed(evt);
            }
        });

        jLabel6.setText("Prezime:");

        txtPrezimeUcenika.setText("Ćirković");

        jLabel7.setText("Ulica:");

        txtUlicaUcenika.setText("Radnička");

        jLabel8.setText("Broj:");

        txtBrojUcenika.setText("30");

        jLabel9.setText("Mesto:");

        btnDodajUcenika.setText("Dodaj učenika");
        btnDodajUcenika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajUcenikaActionPerformed(evt);
            }
        });

        btnObrisiUcenika.setText("Obriši učenika");
        btnObrisiUcenika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiUcenikaActionPerformed(evt);
            }
        });

        tblUcenici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUcenici);

        btnSacuvajOdeljenje.setText("Sačuvaj odeljenje");
        btnSacuvajOdeljenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajOdeljenjeActionPerformed(evt);
            }
        });

        cmbMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Datum:");

        txtDatum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));
        txtDatum.setText("12.07.1994");
        txtDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatumActionPerformed(evt);
            }
        });

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnZatvori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNazivOdeljenja, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtPrezimeUcenika)
                            .addComponent(txtImeUcenika))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addGap(30, 30, 30)
                        .addComponent(cmbSkola, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cmbSmer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisiUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(btnSacuvajOdeljenje, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(btnDodajUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtUlicaUcenika, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBrojUcenika, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(37, 37, 37)
                                    .addComponent(txtDatum)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNazivOdeljenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbSkola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cmbSmer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtImeUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPrezimeUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtUlicaUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtBrojUcenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cmbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDodajUcenika))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisiUcenika)
                    .addComponent(btnSacuvajOdeljenje))
                .addGap(18, 18, 18)
                .addComponent(btnZatvori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajUcenikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajUcenikaActionPerformed
        try {
            if (txtImeUcenika.getText().isEmpty() || txtPrezimeUcenika.getText().isEmpty()
                    || txtDatum.getText().isEmpty()
                    || txtUlicaUcenika.getText().isEmpty() || txtBrojUcenika.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Sva polja moraju biti popunjena!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ModelTabeleUcenici tabela = (ModelTabeleUcenici) tblUcenici.getModel();
            
            String ime = txtImeUcenika.getText();
            String prezime = txtPrezimeUcenika.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datum = sdf.parse(txtDatum.getText());
            String ulica = txtUlicaUcenika.getText();
            String broj = txtBrojUcenika.getText();
            Mesto mesto = (Mesto) cmbMesto.getSelectedItem();
            
            if(datum.after(new Date())){
                JOptionPane.showMessageDialog(null, "Datum mora biti pre današnjeg!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ArrayList<Ucenik> ucenici = tabela.vratiUcenike();
            for (Ucenik ucenik : ucenici) {
                if(ucenik.getIme().equals(ime) && ucenik.getPrezime().equals(prezime)
                       &&  ucenik.getDatumRodjenja().equals(datum)){
                JOptionPane.showMessageDialog(null, "Ovaj učenik je već unet!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                return;
                }
            }
            Ucenik ucenik = new Ucenik(null, -1, ime, prezime, datum, ulica, broj, mesto);

            

            tabela.dodajUcenika(ucenik);

        } catch (ParseException ex) {
            Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajUcenikaActionPerformed

    private void btnObrisiUcenikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiUcenikaActionPerformed
        int red = tblUcenici.getSelectedRow();

        if (red >= 0) {
            ModelTabeleUcenici model = (ModelTabeleUcenici) tblUcenici.getModel();
            model.obrisiUcenika(red);
        }
    }//GEN-LAST:event_btnObrisiUcenikaActionPerformed

    private void btnSacuvajOdeljenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajOdeljenjeActionPerformed
        try {
            if (txtNazivOdeljenja.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sva polja moraju biti popunjena!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            ModelTabeleUcenici tabela = (ModelTabeleUcenici) tblUcenici.getModel();
            ArrayList<Ucenik> ucenici = tabela.vratiUcenike();

            if (ucenici.size() < 5 || ucenici.size() > 30) {
                JOptionPane.showMessageDialog(null, "Broj učenika mora biti rasponu od 5 do 30!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            String naziv = txtNazivOdeljenja.getText();
            Skola skola = (Skola) cmbSkola.getSelectedItem();
            Smer smer = (Smer) cmbSmer.getSelectedItem();
            
            Korisnik korisnik = Sesija.getInstance().getUlogovani();

            Odeljenje odeljenje = new Odeljenje(-1, naziv, skola, smer, korisnik, ucenici);
            KontrolerKlijent.getInstance().dodajOdeljenje(odeljenje);
            JOptionPane.showMessageDialog(this, "Uspešno ste dodali odeljenje.","Obaveštenje",INFORMATION_MESSAGE);
            GlavnaForma gf = (GlavnaForma) getParent();
            gf.popuniTabelu();
            restart();
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspešno dodavanje odeljenja.","Obaveštenje",INFORMATION_MESSAGE);
            Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSacuvajOdeljenjeActionPerformed

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void txtImeUcenikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImeUcenikaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImeUcenikaActionPerformed

    private void txtDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DodajOdeljenjeForma dialog = new DodajOdeljenjeForma(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajUcenika;
    private javax.swing.JButton btnObrisiUcenika;
    private javax.swing.JButton btnSacuvajOdeljenje;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JComboBox cmbMesto;
    private javax.swing.JComboBox cmbSkola;
    private javax.swing.JComboBox cmbSmer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUcenici;
    private javax.swing.JTextField txtBrojUcenika;
    private javax.swing.JFormattedTextField txtDatum;
    private javax.swing.JTextField txtImeUcenika;
    private javax.swing.JTextField txtNazivOdeljenja;
    private javax.swing.JTextField txtPrezimeUcenika;
    private javax.swing.JTextField txtUlicaUcenika;
    // End of variables declaration//GEN-END:variables

    private void ucitajMesta() {
        try {
            ArrayList<Mesto> mesta = KontrolerKlijent.getInstance().ucitajMesta();

            cmbMesto.removeAllItems();

            for (Mesto mesto : mesta) {
                cmbMesto.addItem(mesto);
            }
        } catch (Exception ex) {
            Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ucitajSmerove() {
        try {
            ArrayList<Smer> smerovi = KontrolerKlijent.getInstance().ucitajSmerove();

            cmbSmer.removeAllItems();

            for (Smer smer : smerovi) {
                cmbSmer.addItem(smer);
            }
        } catch (Exception ex) {
            Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ucitajSkole() {
        try {
            ArrayList<Skola> skole = KontrolerKlijent.getInstance().ucitajSkole();

            cmbSkola.removeAllItems();

            for (Skola skola : skole) {
                cmbSkola.addItem(skola);
            }
        } catch (Exception ex) {
            Logger.getLogger(DodajOdeljenjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void restart() {
        txtNazivOdeljenja.setText("");
        txtImeUcenika.setText("");
        txtPrezimeUcenika.setText("");
        txtDatum.setText("");
        txtUlicaUcenika.setText("");
        txtBrojUcenika.setText("");
        tblUcenici.setModel(new ModelTabeleUcenici());
    }
}
